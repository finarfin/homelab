credentials:
  system:
    domainCredentials:
      - credentials:
        - usernamePassword:
            scope:    "GLOBAL"
            id:       "gitea-credentials"
            username: "${GITEA_USER}"
            password: "${GITEA_PASSWORD}"
jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy: 
    projectMatrix:
      grantedPermissions:
        - "Overall/Administer:Engineers"
        - "Overall/Read:Developers"
        - "Overall/Read:Operations"
  crumbIssuer: standard
  nodes:
  - permanent:
      labelString: "windows packer"
      launcher:
        jnlp:
          workDirSettings:
            disabled: false
            failIfWorkDirIsMissing: true
            internalDir: "remoting"
      mode: EXCLUSIVE
      name: "windows1"
      numExecutors: 1
      remoteFS: "C:\\temp\\jenkins"  
  remotingSecurity:
    enabled: true
  securityRealm:
    ldap:
      configurations:
        - server: "ldaps://ldap"
          rootDN: "dc=example,dc=com"
          managerDN: "cn=Administrator,cn=Users,dc=example,dc=com"
          managerPasswordSecret: "${LDAP_PASSWORD}"
          userSearch: "(&(objectclass=user)(sAMAccountName={0}))"
          groupSearchFilter: "(&(objectclass=group)(cn={0}))"
          displayNameAttributeName: "displayname"
          mailAddressAttributeName: "mail"
      cache:
        size: 100
        ttl: 10
      userIdStrategy: "CaseSensitive"
      groupIdStrategy: "CaseSensitive"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  remotingCLI:
    enabled: false   
tool:
  git:
    installations:
      - name: git
        home: /usr/bin/git
unclassified:
  artifactorybuilder:
    useCredentialsPlugin: true
    artifactoryServers:
      - serverId: artifactory
        artifactoryUrl: http://artifactory:8081/artifactory
        resolverCredentialsConfig:
          username: "${ARTIFACTORY_USER}"
          password: "${ARTIFACTORY_PASSWORD}"
  giteaservers:
    servers:
      - displayName: "Gitea"
        serverUrl: "http://gitea:3000"
        credentialsId: "gitea-credentials"
        manageHooks: true
  location:
    url: "http://{{ JENKINS_NAME }}:{{ JENKINS_HTTP_PORT }}"
    adminAddress: "jenkins@example.com"
  mailer:
    smtpHost: "mail-imap"
    smtpPort: 587
    useSsl: false
    authentication:   
      username: "engineer1"
      password: "T3st123!"
jobs:
  - script: >
      organizationFolder('{{ JENKINS_ORGANIZATION }}') {
        description('Folder for {{ JENKINS_ORGANIZATION }} projects')
        displayName('{{ JENKINS_ORGANIZATION }}')
        
        organizations {
          giteaSCMNavigator {
            serverUrl('http://gitea:3000')
            repoOwner('{{ JENKINS_ORGANIZATION }}')
            credentialsId('gitea-credentials')
          }
        }
        configure { node ->
            def traits = node / navigators / 'org.jenkinsci.plugin.gitea.GiteaSCMNavigator' / traits
            traits << 'org.jenkinsci.plugin.gitea.BranchDiscoveryTrait' {
                strategyId('1')
            }
            traits << 'org.jenkinsci.plugin.gitea.OriginPullRequestDiscoveryTrait' {
                strategyId('1')
            }                        
            traits << 'org.jenkinsci.plugin.gitea.ForkPullRequestDiscoveryTrait' {
                strategyId('1')
                trust(class: 'org.jenkinsci.plugin.gitea.ForkPullRequestDiscoveryTrait$TrustContributors')
            }
        }          
        projectFactories {
            workflowMultiBranchProjectFactory {
                scriptPath 'Jenkinsfile'
            }
        }
        orphanedItemStrategy {
          discardOldItems {
            daysToKeep(-1)
            numToKeep(-1)
          }
        }
        configure { node ->
          node / triggers / 'com.cloudbees.hudson.plugins.folder.computed.PeriodicFolderTrigger' {
            spec('H H * * *')
            interval(86400000)
          }
        }        
       authorization {
            permissions('Developers', [
                'hudson.model.Item.Build',
                'hudson.model.Item.Cancel',
                'hudson.model.Item.Read',
                'hudson.model.Item.Workspace',
                'hudson.model.View.Read'
            ])
            
            permissions('Operations', [
                'com.cloudbees.plugins.credentials.CredentialsProvider.Create',
                'com.cloudbees.plugins.credentials.CredentialsProvider.Delete',
                'com.cloudbees.plugins.credentials.CredentialsProvider.ManageDomains',
                'com.cloudbees.plugins.credentials.CredentialsProvider.Update',
                'com.cloudbees.plugins.credentials.CredentialsProvider.View',
                'hudson.model.Item.Build',
                'hudson.model.Item.Cancel',
                'hudson.model.Item.Discover',
                'hudson.model.Item.Read',
                'hudson.model.Item.Workspace',
                'hudson.model.Run.Replay',
                'hudson.model.View.Configure',
                'hudson.model.View.Create',
                'hudson.model.View.Delete',
                'hudson.model.View.Read',
                'hudson.scm.SCM.Tag'
            ])            
        }        
      }